/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scientificcal;

/**
 *
 * @author hasan
 */
public class calframe extends javax.swing.JFrame {

    /**
     * Creates new form calframe
     */
    public calframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonplus = new javax.swing.JButton();
        buttonminus = new javax.swing.JButton();
        buttonmulti = new javax.swing.JButton();
        buttondiv = new javax.swing.JButton();
        input1 = new javax.swing.JTextField();
        input2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        answer = new javax.swing.JLabel();
        power = new javax.swing.JButton();
        root = new javax.swing.JButton();
        log10 = new javax.swing.JButton();
        ln = new javax.swing.JButton();
        mod = new javax.swing.JButton();
        fact = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        hexa = new javax.swing.JButton();
        binary = new javax.swing.JButton();
        octal = new javax.swing.JButton();
        deg_to_rad = new javax.swing.JButton();
        rad_to_deg = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("calcode");
        setPreferredSize(new java.awt.Dimension(500, 450));

        buttonplus.setText("+");
        buttonplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonplusActionPerformed(evt);
            }
        });

        buttonminus.setText("-");
        buttonminus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonminusActionPerformed(evt);
            }
        });

        buttonmulti.setText("*");
        buttonmulti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonmultiActionPerformed(evt);
            }
        });

        buttondiv.setText("/");
        buttondiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttondivActionPerformed(evt);
            }
        });

        jLabel1.setText("first number");

        jLabel2.setText("second number");

        power.setText("x^m");
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });

        root.setText("sqrt()");
        root.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootActionPerformed(evt);
            }
        });

        log10.setText("log10");
        log10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                log10ActionPerformed(evt);
            }
        });

        ln.setText("ln");
        ln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnActionPerformed(evt);
            }
        });

        mod.setText("%");
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });

        fact.setText("!");
        fact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factActionPerformed(evt);
            }
        });

        clear.setText("c");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        hexa.setText("hexa");
        hexa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexaActionPerformed(evt);
            }
        });

        binary.setText("binary");
        binary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binaryActionPerformed(evt);
            }
        });

        octal.setText("octal");
        octal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                octalActionPerformed(evt);
            }
        });

        deg_to_rad.setText("deg>rad");
        deg_to_rad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deg_to_radActionPerformed(evt);
            }
        });

        rad_to_deg.setText("rad>deg");
        rad_to_deg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_to_degActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(input1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(buttonmulti)
                                .addComponent(buttonplus))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(mod)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fact)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonminus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(power))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttondiv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(root))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(deg_to_rad)))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(input2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(log10)
                                .addGap(18, 18, 18)
                                .addComponent(binary))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ln)
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(octal)
                                    .addComponent(hexa))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1)
                        .addGap(128, 128, 128)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(answer)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(clear)
                        .addGap(111, 111, 111))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(rad_to_deg)
                        .addGap(107, 107, 107))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(input2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonplus)
                            .addComponent(buttonminus)
                            .addComponent(power)
                            .addComponent(log10))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(binary)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonmulti)
                    .addComponent(buttondiv)
                    .addComponent(root)
                    .addComponent(ln)
                    .addComponent(hexa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mod)
                    .addComponent(fact)
                    .addComponent(octal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rad_to_deg)
                    .addComponent(deg_to_rad))
                .addGap(15, 15, 15)
                .addComponent(answer)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonplusActionPerformed
        // TODO add your handling code here:
        double result;
        getinput();
        result=n1+n2;
        answer.setText("answer is "+result);
                
    }//GEN-LAST:event_buttonplusActionPerformed

    private void buttonminusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonminusActionPerformed
        // TODO add your handling code here:
         double result;
        getinput();
        result=n1-n2;
        answer.setText("answer is "+result);
    }//GEN-LAST:event_buttonminusActionPerformed

    private void buttonmultiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonmultiActionPerformed
        // TODO add your handling code here:
         double result;
        getinput();
        result=n1*n2;
        answer.setText("answer is "+result);
    }//GEN-LAST:event_buttonmultiActionPerformed

    private void buttondivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttondivActionPerformed
        // TODO add your handling code here:
         double result;
        getinput();
        result=(double)n1/n2;
        String fresult=String.format("answer is %.5f",result);
        answer.setText(fresult);
    }//GEN-LAST:event_buttondivActionPerformed

    private void powerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerActionPerformed
         double result;
        getinput();
        if(n1<0)
    answer.setText("not valid");
else
        {
        result=Math.pow(n1,n2);
        answer.setText("answer is "+result);
        } // TODO add your handling code here:
    }//GEN-LAST:event_powerActionPerformed

    private void rootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootActionPerformed
 double result;
        getinput2();
        if(n1<0)
    answer.setText("not valid");
else
        {
        result=Math.sqrt(n1);
      String fresult=String.format("answer is %.5f",result);
        answer.setText(fresult);}
    }//GEN-LAST:event_rootActionPerformed

    private void log10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_log10ActionPerformed

double result;
        getinput2();
        result=Math.log10(n1);
 String fresult=String.format("answer is %.5f",result);
        answer.setText(fresult);
        // TODO add your handling code here:
    }//GEN-LAST:event_log10ActionPerformed

    private void lnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnActionPerformed
double result;
        getinput2();
        result=Math.log(n1);
 String fresult=String.format("answer is %.5f",result);
        answer.setText(fresult);        
// TODO add your handling code here:
    }//GEN-LAST:event_lnActionPerformed

    private void modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modActionPerformed
   double result;
        getinput();
        result=n1%n2;
        answer.setText("answer is "+result);

        // TODO add your handling code here:
    }//GEN-LAST:event_modActionPerformed

    private void factActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factActionPerformed
double result=1;int i;
getinput2();
if(n1<0)
    answer.setText("not valid");
else
        {
for( i=1;i<=n1;i++)
{result*=i;
}
   answer.setText("answer is "+result);
}       // TODO add your handling code here:
    }//GEN-LAST:event_factActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
input1.setText("");
input2.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void binaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binaryActionPerformed

getinput2();
n3=(int)n1;
    String s1=Integer.toBinaryString(n3);
            answer.setText("answer is "+s1);
             // TODO add your handling code here:
    }//GEN-LAST:event_binaryActionPerformed

    private void hexaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexaActionPerformed
getinput2();
n3=(int)n1;
    String s1=Integer.toHexString(n3);
            answer.setText("answer is "+s1);
        // TODO add your handling code here:
    }//GEN-LAST:event_hexaActionPerformed

    private void octalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_octalActionPerformed
getinput2();

n3=(int)n1;
    String s1=Integer.toOctalString(n3);
            answer.setText("answer is "+s1);
        // TODO add your handling code here:
    }//GEN-LAST:event_octalActionPerformed

    private void deg_to_radActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deg_to_radActionPerformed
getinput2();
result=Math.toRadians(n1);
 answer.setText("answer is "+result);
        // TODO add your handling code here:
    }//GEN-LAST:event_deg_to_radActionPerformed

    private void rad_to_degActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_to_degActionPerformed
       getinput2();
result=Math.toDegrees(n1);
 answer.setText("answer is "+result);
        // TODO add your handling code here:
    }//GEN-LAST:event_rad_to_degActionPerformed

  
    private void getinput()
    {
       n1=Double.parseDouble(input1.getText());
       n2=Double.parseDouble(input2.getText());
       
    }
     private void getinput2()
    {
       n1=Double.parseDouble(input1.getText()); 
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calframe().setVisible(true);
            }
        });
    }
private double n1,n2,result;
private int n3;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel answer;
    private javax.swing.JButton binary;
    private javax.swing.JButton buttondiv;
    private javax.swing.JButton buttonminus;
    private javax.swing.JButton buttonmulti;
    private javax.swing.JButton buttonplus;
    private javax.swing.JButton clear;
    private javax.swing.JButton deg_to_rad;
    private javax.swing.JButton fact;
    private javax.swing.JButton hexa;
    private javax.swing.JTextField input1;
    private javax.swing.JTextField input2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton ln;
    private javax.swing.JButton log10;
    private javax.swing.JButton mod;
    private javax.swing.JButton octal;
    private javax.swing.JButton power;
    private javax.swing.JButton rad_to_deg;
    private javax.swing.JButton root;
    // End of variables declaration//GEN-END:variables
}
